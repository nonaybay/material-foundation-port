@use 'sass:math';
@use '../utils/color.constants' as *;
@use '../utils/color' as *;
@use '../utils/math' as *;

@function viewing-conditions($wp: $WP_D65, $adaplum: -1, $bg-lstar: 50, $surr: 2, $discounting-illum: false) {
  $adaplum: if(($adaplum > 0), $adaplum, (math.div(200, math.$pi) * math.div(Y-from-lstar(50), 100)));
  $bg-lstar: math.max(30, $bg-lstar);
  $xyz: $wp;
  $rW: gm($xyz, 1, 1) * 0.401288 + gm($xyz, 1, 2) * 0.650173 + gm($xyz, 1, 3) * -0.051461;
  $gW: gm($xyz, 1, 1) * -0.250268 + gm($xyz, 1, 2) * 1.204414 + gm($xyz, 1, 3) * 0.045854;
  $bW: gm($xyz, 1, 1) * -0.002079 + gm($xyz, 1, 2) * 0.048952 + gm($xyz, 1, 3) * 0.953127;

  $f: 0.8 + math.div($surr, 10);
  
  $c: if(($f >= 0.9), lerp(0.59, 0.69, (($f - 0.9) * 10)) , lerp(0.525, 0.59, (($f - 0.8) * 10)) );

  $d: if($discounting-illum, $INT , ($f * (1 - (math.div(1, 3.6) * math.pow(math.$e, math.div((($adaplum * -1) - 42), 92))))) );
  $d: if(($d > 1), 1, if(($d < 0), 0, $d));

  $nc: $f;

  $rgb-d: (
    ( ($d * math.div(100, $rW) + 1 - $d), ($d * math.div(100, $gW) + 1 - $d), ($d * math.div(100, $bW) + 1 - $d), ),
  );

  $k: math.div(1, (5 * $adaplum + 1));
  $k4: math.pow($k, 4);
  $k4f: (1 - $k4);

  $fl: ($k4 * $adaplum) + (0.1 * $k4f * $k4f * math.pow(5.0 * $adaplum, math.div(1, 3)));

  $n: math.div(Y-from-lstar($bg-lstar), gm($wp, 1, 2));
  $z: (1.48 + math.sqrt($n));
  $nbb: math.div(0.725, math.pow($n, 0.2));
  $ncb: $nbb;

  $rgb-a-factors: (
    (
      (math.pow($fl * gm($rgb-d, 1, 1) * math.div($rW, 100), 0.42)),
      (math.pow($fl * gm($rgb-d, 1, 2) * math.div($gW, 100), 0.42)),
      (math.pow($fl * gm($rgb-d, 1, 3) * math.div($bW, 100), 0.42)),
    ),
  );

  $rgb-a: (
    (
      (math.div((400 * gm($rgb-a-factors, 1, 1)), (gm($rgb-a-factors, 1, 1) + 27.13))),
      (math.div((400 * gm($rgb-a-factors, 1, 2)), (gm($rgb-a-factors, 1, 2) + 27.13))),
      (math.div((400 * gm($rgb-a-factors, 1, 3)), (gm($rgb-a-factors, 1, 3) + 27.13))),
    ),
  );

  $aw: math.div((40 * gm($rgb-a, 1, 1) + 20 * gm($rgb-a, 1, 2) + gm($rgb-a, 1, 3)), 20) * $nbb;

  $map-debug: (
    '                 white-point': $wp,
    '          adapting-luminance': $adaplum,
    '           background-l-star': $bg-lstar,
    '                    surround': $surr,
    '     discounting-illuminance': $discounting-illum,
    'background-Y-to-whitePoint-Y': $n,
    '                          aw': $aw,
    '                         nbb': $nbb,
    '                         ncb': $ncb,
    '                           c': $c,
    '                          nc': $nc,
    '               d-rgb-inverse': ((0, 0, 0),),
    '                       rgb-d': $rgb-d,
    '                          fl': $fl,
    '                     fl-root': math.pow($fl, 0.25),
    '                           z': $z,
  );

  @return $map-debug;
}


@debug '';
@each $a, $b in viewing-conditions() {
  @debug '#{$a} ~> #{$b}';
}
@debug '';
